---
import ExperienceEntry from "@/components/ExperienceEntry.astro";
import TechLabel from "@/components/TechLabel.astro";
import RelatedLink from "@/components/RelatedLink.astro";
import ViewFullLink from "@/components/ViewFullLink.astro";

import { getLangFromUrl, useTranslations, useTranslatedPath } from "@/i18n/utils";
import { getCollection } from "astro:content";

// Gestiones de idioma
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Colecciones de contenido
const experiences = await getCollection("experiences", ({ id }) => {
    return id.includes(lang + "/");
});

---

<section id="experience" class="content" aria-label={t("aria-label.experience")}>
    <div class="content-title sr-only">
        <h2>{t("nav.experience")}</h2>
    </div>

    <div>
        <ol class="content-list">
            {
                experiences.sort((a, b) => {
                    let initialYearA = parseInt(a.data.dates.slice(0, 4));
                    let initialYearB = parseInt(b.data.dates.slice(0, 4));

                    let isCurrentA = a.data.dates.includes("Actualidad") || a.data.dates.includes("Present");
                    let isCurrentB = b.data.dates.includes("Actualidad") || b.data.dates.includes("Present");

                    return isCurrentA && !isCurrentB ? -1 :
                        !isCurrentA && isCurrentB ? 1 :
                        initialYearA > initialYearB ? -1 :
                        initialYearA < initialYearB ? 1 : 0;
                    })
                    .map((exp) => {
                        return (
                            <ExperienceEntry
                                date={exp.data.dates}
                                companyName={exp.data.company}
                                companyUrl={exp.data.url}
                                role={exp.data.lastRole}
                                oldRole={exp.data.oldRole}
                            >
                                {exp.data.description.map((p) => {
                                    return (
                                        <p
                                            slot="experience-text"
                                            class="experience-text"
                                        >
                                            {p}
                                        </p>
                                    );
                                })}

                                <ul
                                    slot="related-links"
                                    class="lists-related-links"
                                    aria-label={t('aria-label.exp-related-Link')}
                                >
                                    {exp.data.relatedLinks?.map((link) => {
                                        return (
                                            <RelatedLink
                                                iconType={link.iconType}
                                                text={link.text}
                                                href={link.url}
                                            />
                                        );
                                    })}
                                </ul>

                                <ul
                                    slot="tech-label"
                                    class="list-used-tech"
                                    aria-label="Technologies Used"
                                    aria-label={t('aria-label.exp-techs')}
                                >
                                    {exp.data.tags.map((tag) => {
                                        return <TechLabel text={tag} />;
                                    })}
                                </ul>
                            </ExperienceEntry>
                        );
                    })
            }
        </ol>
        <ViewFullLink
            partialText={t("link.resume.partial")}
            lastWord={t("link.resume.last")}
            href={translatePath('/cv.pdf')}
            ariaLabel={t("aria-label.exp-full")}
            id="cv-full-link"
        />
    </div>
</section>

<style>
    .experience-text {
        line-height: 1.5;
        font-size: 0.875rem;
        margin-top: 0.5rem;
    }

    .full-cv-link {
        line-height: 1;
        padding-top: 1.25rem;
        font-weight: 600;
        align-items: center;
        display: inline-flex;
    }

    .view-full-partial-text {
        padding-bottom: 1px;
        transition-property:
            color,
            background-color,
            border-color,
            text-decoration-color,
            fill,
            stroke,
            opacity,
            box-shadow,
            transform,
            filter,
            backdrop-filter,
            -webkit-backdrop-filter;

        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 0.15s;
        border-color: transparent;
        border-bottom-width: 1px;
    }

    .resume-partial-text-container {
        white-space: nowrap;
    }

    .resume-partial-text {
        padding-bottom: 1px;
        transition-property:
            color,
            background-color,
            border-color,
            text-decoration-color,
            fill,
            stroke,
            opacity,
            box-shadow,
            transform,
            filter,
            backdrop-filter,
            -webkit-backdrop-filter;

        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 0.15s;
        border-color: transparent;
        border-bottom-width: 1px;
    }

    .arrow {
        transition-property: transform;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 0.15s;
        transform: translate(0, -1px) rotate(0) skewX(0) skewY(0) scaleX(0.75)
            scaleY(0.75);

        flex-shrink: 0;

        display: inline-block;
        margin-left: 0.25rem;
        vertical-align: middle;
    }

    .full-cv-link:hover .view-full-partial-text,
    .full-cv-link:hover .resume-partial-text {
        border-color: var(--hover-link-color);
    }

    .full-cv-link:hover .arrow {
        transform: translate(0.5rem, -1px) rotate(0) skewX(0) skewY(0)
            scaleX(0.75) scaleY(0.75);
    }

    @media screen (max-width: 639px) {
    }

    @media screen (min-width: 640px) and (max-width: 1023px) {
    }

    /* Just margins */
    @media screen(min-width: 768px) and (max-width: 1023px) {
    }

    @media screen (min-width: 1024px) {
    }
</style>
