---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div class="language-switch-container">
    <svg
        xmlns="http://www.w3.org/2000/svg"
        class="lang-icon"
        viewBox="0 0 1024 1024"
        version="1.1"
        ><title>Internationalization</title><desc>Language selection icon</desc>
        <path
            d="M547.797333 638.208l-104.405333-103.168 1.237333-1.28a720.170667 720.170667 0 0 0 152.490667-268.373333h120.448V183.082667h-287.744V100.906667H347.605333v82.218666H59.818667V265.386667h459.178666a648.234667 648.234667 0 0 1-130.304 219.946666 643.242667 643.242667 0 0 1-94.976-137.728H211.541333a722.048 722.048 0 0 0 122.453334 187.434667l-209.194667 206.378667 58.368 58.368 205.525333-205.525334 127.872 127.829334 31.232-83.84m231.424-208.426667h-82.218666l-184.96 493.312h82.218666l46.037334-123.306667h195.242666l46.464 123.306667h82.218667l-185.002667-493.312m-107.690666 287.744l66.56-178.005333 66.602666 178.005333z"
            fill="var(--secondary-headline-color)"></path></svg
    >

    <div class="c">
        <span class="language-indicator">{t("language.indicator")}&nbsp;</span>
        <ul>
            {
                (
                    <>
                        <li class="language-selected">
                            <a href="#">
                                {lang == "en" ? "English" : "Castellano"}
                            </a>
                        </li>
                        <li class="language-option">
                            <a href={lang == "en" ? "/" : "en"}>
                                {lang == "en" ? "Castellano" : "English"}
                            </a>
                        </li>
                    </>
                )
            }
        </ul>
    </div>
</div>

<style>
    .c {
        display: inline-flex;
    }

    .lang-icon {
        height: 22px;
        margin-right: 0.5rem;
        align-items: center;
        vertical-align: middle;
    }

    .language-switch-container {
        display: flex;
        flex-wrap: wrap;
        /* justify-content: flex-end; */
        font-size: 0.85rem;
        font-weight: 600;
        line-height: 1.5;

        margin-top: 1rem;
        letter-spacing: 0.025em;
    }

    .language-indicator {
        color: var(--secondary-headline-color);
        /* text-wrap: nowrap; */
    }

    .language-switch-container ul {
        display: inline-block;
    }

    li.language-selected:hover + .language-option {
        visibility: visible;
        opacity: 1;
    }

    li.language-option:hover {
        visibility: visible;
        opacity: 1;
    }

    .language-selected {
        margin-left: 2px;
    }

    .language-option {
        visibility: hidden;
        opacity: 0;

        margin-left: 2px;

        transition-property:
            color,
            display,
            background-color,
            border-color,
            text-decoration-color,
            fill,
            stroke,
            visibility,
            opacity,
            box-shadow,
            transform,
            filter,
            backdrop-filter,
            -webkit-backdrop-filter;

        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
        transition-duration: 0.15s;
    }

    .language-option a:hover {
        color: var(--hover-link-color);
    }

    @media (max-width: 365px) {
        .lang-icon {
            display: none;
        }

        .c {
            display: flex;
            flex-direction: column;
        }
    }

    @media (max-width: 1024px) {
        .language-switch-container {
            /* justify-content: start; */
            margin-top: 2rem;
        }
    }
</style>
