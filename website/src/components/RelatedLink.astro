---
import SvgIconClip from "@/components/svg-icons/SvgIconClip.astro";
import SvgIconGithub from "@/components/svg-icons/SvgIconGithub.astro";
import SvgIconLike from "@/components/svg-icons/SvgIconLike.astro";

interface Props {
    iconType: string;
    text: string;
    href: string;
}

const { iconType, text, href } = Astro.props;

let DynamicIcon = SvgIconClip;

function renderIconSwitch(iconType: string) {
    switch (iconType) {
        case "clip":
            DynamicIcon = SvgIconClip;
            break;

        case "github":
            DynamicIcon = SvgIconGithub;
            break;

        case "like":
            DynamicIcon = SvgIconLike;
            break;

        default:
            DynamicIcon = SvgIconClip;
    }
}

renderIconSwitch(iconType);
---

<li class="related-link-element">
    <a class="related-link" href={href} target="_blank" rel="noreferrer">
        <DynamicIcon />
        <span>{text}</span>
    </a>
</li>

<style>
    .related-link-element {
        margin-right: 1rem;
    }

    .related-link {
        color: var(--link-color);
        font-size: 0.875rem;
        font-weight: 500;
        line-height: 1.25rem;
        align-items: center;
        display: inline-flex;
        margin-top: 0.5rem;
        position: relative;
        text-decoration: inherit;
    }

    .related-link:hover {
        color: var(--hover-link-color);
    }
</style>
